{"ast":null,"code":"var _jsxFileName = \"/home/admin/WebstormProjects/home/src/components/mainSection/mainSection.js\";\nimport React, { useState } from \"react\";\nimport ExampleMap from \"../anotherMap\";\nimport { Radio } from \"semantic-ui-react\";\nimport \"./mainSection.scss\";\nimport { MyCarousel } from \"../carousel/carousel\";\nimport GoogleMap from \"react-maps-google\";\nimport { places } from \"../../common/places\";\nimport { MarkerDescription } from \"../markerDescrition/markerDescrition\";\n\nconst MyToggle = () => React.createElement(Radio, {\n  toggle: true,\n  defaultChecked: false,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}); // const newCenter1 = GoogleMap.onCenterChange({ lat: 50.436437, lng: 30.512129 });\n// const newCenter2 = GoogleMap.panTo({\n//   lat: 50.436437,\n//   lng: 30.512129,\n// });\n\n\nexport const MainSection = () => {\n  const [visible, setVisible] = useState(false);\n  const visibility = visible ? \"\" : \"mapHide\";\n  const [bigBasis, setBigBasis] = useState(true);\n  const basisSettings = bigBasis ? \"bigBasis\" : \"\";\n\n  const mapToggle = () => {\n    setVisible(!visible);\n    setBigBasis(!bigBasis);\n  };\n\n  return React.createElement(\"section\", {\n    className: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sectionContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"firstRow sectionRow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"filters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Date\"), React.createElement(\"button\", {\n    className: \"filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Quantities\"), React.createElement(\"button\", {\n    className: \"filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Type\"), React.createElement(\"button\", {\n    className: \"filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Home type\"), React.createElement(\"button\", {\n    className: \"filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Price\"), React.createElement(\"button\", {\n    className: \"filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Momental\"), React.createElement(\"button\", {\n    className: \"filter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Another Filters\")), React.createElement(\"div\", {\n    className: \"mapVisible\",\n    onClick: mapToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Show map\"), React.createElement(MyToggle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"secondRow sectionRow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"searchResults sides \" + basisSettings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, places.map((elem, i) => React.createElement(MarkerDescription, {\n    city: elem.city,\n    title: elem.secTitle,\n    courses: elem.description.courses,\n    price: elem.price,\n    slide1: elem.slidesImg.slide1,\n    slide2: elem.slidesImg.slide2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"mapSide sides \" + visibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(ExampleMap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })))));\n};","map":{"version":3,"sources":["/home/admin/WebstormProjects/home/src/components/mainSection/mainSection.js"],"names":["React","useState","ExampleMap","Radio","MyCarousel","GoogleMap","places","MarkerDescription","MyToggle","MainSection","visible","setVisible","visibility","bigBasis","setBigBasis","basisSettings","mapToggle","map","elem","i","city","secTitle","description","courses","price","slidesImg","slide1","slide2"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ExampleMap from \"../anotherMap\";\nimport { Radio } from \"semantic-ui-react\";\nimport \"./mainSection.scss\";\nimport { MyCarousel } from \"../carousel/carousel\";\nimport GoogleMap from \"react-maps-google\";\nimport { places } from \"../../common/places\";\nimport { MarkerDescription } from \"../markerDescrition/markerDescrition\";\n\nconst MyToggle = () => <Radio toggle={true} defaultChecked={false} />;\n// const newCenter1 = GoogleMap.onCenterChange({ lat: 50.436437, lng: 30.512129 });\n// const newCenter2 = GoogleMap.panTo({\n//   lat: 50.436437,\n//   lng: 30.512129,\n// });\n\nexport const MainSection = () => {\n  const [visible, setVisible] = useState(false);\n  const visibility = visible ? \"\" : \"mapHide\";\n  const [bigBasis, setBigBasis] = useState(true);\n  const basisSettings = bigBasis ? \"bigBasis\" : \"\";\n  const mapToggle = () => {\n    setVisible(!visible);\n    setBigBasis(!bigBasis);\n  };\n\n  return (\n    <section className=\"main\">\n      <div className=\"sectionContainer\">\n        <div className=\"firstRow sectionRow\">\n          <div className=\"filters\">\n            <button className=\"filter\">Date</button>\n            <button className=\"filter\">Quantities</button>\n            <button className=\"filter\">Type</button>\n            <button className=\"filter\">Home type</button>\n            <button className=\"filter\">Price</button>\n            <button className=\"filter\">Momental</button>\n            <button className=\"filter\">Another Filters</button>\n          </div>\n          <div className=\"mapVisible\" onClick={mapToggle}>\n            <span>Show map</span>\n            <MyToggle />\n          </div>\n        </div>\n        <div className=\"secondRow sectionRow\">\n          <div className={\"searchResults sides \" + basisSettings}>\n            {/*<div className=\"markerPlace\">*/}\n            {/*  <div className=\"picturePart\">*/}\n            {/*    <MyCarousel*/}\n            {/*      firstImgPath={\"./img/firstCarFirstSl.jpeg\"}*/}\n            {/*      secondImgPath={\"./img/firstCarSecSl.jpeg\"}*/}\n            {/*    />*/}\n            {/*  </div>*/}\n            {/*  <div className=\"markerDescription\" onClick={\"newCenter1\"}>*/}\n            {/*    <div className=\"flexWrap\">*/}\n            {/*      <h5 className=\"city\">Kiev</h5>*/}\n            {/*      <h3 className=\"name\">PowerCode Academy</h3>*/}\n            {/*      <ul className=\"courses\">*/}\n            {/*        <li className=\"courseName\">Front-End</li>*/}\n            {/*        <li className=\"courseName\">PHP</li>*/}\n            {/*        <li className=\"courseName\">It project management</li>*/}\n            {/*        <li className=\"courseName\">Web-design</li>*/}\n            {/*      </ul>*/}\n            {/*      <span className=\"price\">8400 uah</span>*/}\n            {/*    </div>*/}\n            {/*  </div>*/}\n            {/*</div>*/}\n            {/*<div className=\"markerPlace\">*/}\n            {/*  <div className=\"picturePart\">*/}\n            {/*    <MyCarousel*/}\n            {/*      firstImgPath={\"./img/secCarFirstSl.jpeg\"}*/}\n            {/*      secondImgPath={\"./img/secCarSecSl.jpeg\"}*/}\n            {/*    />*/}\n            {/*  </div>*/}\n            {/*  <div className=\"markerDescription\" onClick={newCenter2}>*/}\n            {/*    <div className=\"flexWrap\">*/}\n            {/*      <h5 className=\"city\">Zaporozhye</h5>*/}\n            {/*      <h3 className=\"name\">PowerCode Academy</h3>*/}\n            {/*      <ul className=\"courses\">*/}\n            {/*        <li className=\"courseName\">Front-End</li>*/}\n            {/*        <li className=\"courseName\">QA</li>*/}\n            {/*        <li className=\"courseName\">Basics of programming</li>*/}\n            {/*      </ul>*/}\n            {/*      <span className=\"price\">8400 uah</span>*/}\n            {/*    </div>*/}\n            {/*  </div>*/}\n            {/*</div>*/}\n            {places.map((elem, i) => (\n              <MarkerDescription\n                city={elem.city}\n                title={elem.secTitle}\n                courses={elem.description.courses}\n                price={elem.price}\n                slide1={elem.slidesImg.slide1}\n                slide2={elem.slidesImg.slide2}\n              />\n            ))}\n          </div>\n          <div className={\"mapSide sides \" + visibility}>\n\n            <ExampleMap />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}