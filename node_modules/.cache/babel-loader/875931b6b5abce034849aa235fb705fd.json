{"ast":null,"code":"var _jsxFileName = \"/home/admin/WebstormProjects/home/src/components/search.js\";\nimport _ from \"lodash\";\nimport faker from \"faker\";\nimport React, { Component } from \"react\";\nimport { Search, Grid, Header, Segment } from \"semantic-ui-react\";\nimport { places } from \"../common/places\";\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: \"\"\n};\nconst source = places.map() //     _.times(5, () => ({\n//   title: faker.company.companyName(),\n//   description: faker.company.catchPhrase(),\n//   image: faker.internet.avatar(),\n//   price: faker.finance.amount(0, 100, 2, \"$\"),\n// }))\n;\nexport default class SearchExampleStandard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleResultSelect = (e, {\n      result\n    }) => this.setState({\n      value: result.title\n    });\n\n    this.handleSearchChange = (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState);\n        const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\n\n        const isMatch = result => re.test(result.title);\n\n        this.setState({\n          isLoading: false,\n          results: _.filter(source, isMatch)\n        });\n      }, 300);\n    };\n  }\n\n  render() {\n    const {\n      isLoading,\n      value,\n      results\n    } = this.state;\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Search, Object.assign({\n      loading: isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      results: results,\n      value: value\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      width: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"State\"), React.createElement(\"pre\", {\n      style: {\n        overflowX: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, JSON.stringify(this.state, null, 2)), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Options\"), React.createElement(\"pre\", {\n      style: {\n        overflowX: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, JSON.stringify(source, null, 2)))));\n  }\n\n}","map":{"version":3,"sources":["/home/admin/WebstormProjects/home/src/components/search.js"],"names":["_","faker","React","Component","Search","Grid","Header","Segment","places","initialState","isLoading","results","value","source","map","SearchExampleStandard","state","handleResultSelect","e","result","setState","title","handleSearchChange","setTimeout","length","re","RegExp","escapeRegExp","isMatch","test","filter","render","debounce","leading","props","overflowX","JSON","stringify"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport faker from \"faker\";\nimport React, { Component } from \"react\";\nimport { Search, Grid, Header, Segment } from \"semantic-ui-react\";\nimport {places} from \"../common/places\";\n\nconst initialState = { isLoading: false, results: [], value: \"\" };\n\nconst source = places.map()\n//     _.times(5, () => ({\n//   title: faker.company.companyName(),\n//   description: faker.company.catchPhrase(),\n//   image: faker.internet.avatar(),\n//   price: faker.finance.amount(0, 100, 2, \"$\"),\n// }))\n;\n\nexport default class SearchExampleStandard extends Component {\n  state = initialState;\n\n  handleResultSelect = (e, { result }) =>\n    this.setState({ value: result.title });\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value });\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.setState(initialState);\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\n      const isMatch = (result) => re.test(result.title);\n\n      this.setState({\n        isLoading: false,\n        results: _.filter(source, isMatch),\n      });\n    }, 300);\n  };\n\n  render() {\n    const { isLoading, value, results } = this.state;\n\n    return (\n      <Grid>\n        <Grid.Column width={6}>\n          <Search\n            loading={isLoading}\n            onResultSelect={this.handleResultSelect}\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\n              leading: true,\n            })}\n            results={results}\n            value={value}\n            {...this.props}\n          />\n        </Grid.Column>\n        <Grid.Column width={10}>\n          <Segment>\n            <Header>State</Header>\n            <pre style={{ overflowX: \"auto\" }}>\n              {JSON.stringify(this.state, null, 2)}\n            </pre>\n            <Header>Options</Header>\n            <pre style={{ overflowX: \"auto\" }}>\n              {JSON.stringify(source, null, 2)}\n            </pre>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}